/// カウント用の変数
/// int型
let i: int = 0;
/// @process 10回繰り返す
while (i < 10) {
    print(i);
    i = i+1;
}

/// return句を試すための関数
function test_return(a: int, b:int) {
    let i: int = 0;
    let sum: int = 0;
    /// スキップされるはず
    while (i < a) {
        i = i + 1;
        sum = sum + i;
        if (b > 0 and i == 10) {
            return sum;
        }
    }
    return sum;
}

print(test_return(15, 0));
print(test_return(15, 1));

function test_break(a: int, b: int) {
    let i: int = 0;
    let sum: int = 0;
    while (i < a) {
        i = i + 1;
        sum = sum + i;
        if (b > 0 and i == 10) {
            break;
        }
    }
    return sum;
}
print(test_break(15, 0));
print(test_break(15, 1));

function test_continue(a:int, b: int) {
    let i: int = 0;
    let sum: int = 0;
    while (i < a) {
        i = i + 1;
        sum = sum + i;
        if (b > 0) {
            continue;
        }
        sum = sum + i;
    }

    return sum;
}

print(test_continue(15, 0));
print(test_continue(15, 1));

/// コルーチン
/// 2回「10」を返す
coroutine test_coroutine() {
    let a: int = 10;
    print(a);
    yield;
    print(a);
}

coro task1 = test_coroutine();
resume task1;
print("A");
resume task1;

